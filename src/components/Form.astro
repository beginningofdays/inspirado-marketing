---
import images from './js/services.json';
---
<div class="community-message flex-column mb-3">
  <div class="component-title">
      <div class="component-title-wrapper">
          <div class="component-line"></div>
          <h2>Community Marketing</h2>
          <div class="component-line"></div>
      </div>
  </div>
  
  <div class="component-marketing-form-header">
      <div class="left-column">
          {images[2] && (
              <a href="#" data-lightbox="image-gallery">
                  <img src={images[2].src} alt={images[2].alt} class="banner-image"/>
              </a>
          )}
      </div>
      <div class="right-column">
          <p>Inspirado Marketing, we understand that building a loyal customer base goes beyond traditional advertising. Our community marketing approach is designed to cultivate strong, meaningful connections with your target audience, transforming them into dedicated brand advocates.</p>
          <p>At Inspirado Marketing, we believe in the power of community to drive your brand forward. Let us help you connect, engage, and grow.</p> 
          <p>Let us help you build a vibrant, engaged community around your brand. Connect with us today, and let’s embark on a journey to inspire, engage, and elevate your business to new heights.</p>
      </div>    
  </div>

  <div class="component-title-wrapper">
      <div class="component-line"></div>
      <h2>Community Strategy</h2>
      <div class="component-line"></div>
  </div>
  <p class="component-content">Are you ready to build a thriving community for your brand on Reddit, Quora, or Discord? Discover your customized community strategy by <span class="text-hightlight">filling out the form below.</span> Our team at Inspirado Marketing will analyze your brand’s needs and provide a tailored plan to help you create and sustain a vibrant, engaged community.</p>
  <!-- Form Section -->
  <div class="component-form mb-1">
    <form method="post" action="https://sheetdb.io/api/v1/w7z9c2i2imfvw" id="sheetdb-form">
        <!-- Form Inputs -->
        <div class="row mb-3">
            <div class="col">
                <div data-mdb-input-init class="form-outline">
                    <input type="text" id="firstName" name="firstName" class="form-control" placeholder="First Name" />
                </div>
            </div>
            <div class="col">
                <div data-mdb-input-init class="form-outline">
                    <input type="text" id="lastName" name="lastName" class="form-control" placeholder="Last Name" />
                </div>
            </div>
        </div>
        <div data-mdb-input-init class="form-outline mb-4">
            <input type="text" id="companyName" name="companyName" class="form-control" placeholder="Company Name" />
        </div>
        <div data-mdb-input-init class="form-outline mb-4">
            <input type="text" id="address" name="address" class="form-control" placeholder="Address" />
        </div>
        <div data-mdb-input-init class="form-outline mb-4">
            <input type="email" id="email" name="email" class="form-control" placeholder="Email" />
        </div>
        <div data-mdb-input-init class="form-outline mb-4">
            <input type="number" id="phone" name="phone" class="form-control" placeholder="Phone" />
        </div>
        <div data-mdb-input-init class="form-outline mb-4">
            <textarea class="form-control" id="message" name="message" rows="4" placeholder="Message"></textarea>
        </div>
        <button data-mdb-ripple-init type="submit" class="btn btn-primary btn-block mb-4">Submit</button>
    </form>
</div>

<script>
// Define the FormSubmission class with proper types
class FormSubmission {
    firstName: string;
    lastName: string;
    companyName: string;
    address: string;
    email: string;
    phone: string;
    message: string;
    date: string;

    constructor(
        firstName: string,
        lastName: string,
        companyName: string,
        address: string,
        email: string,
        phone: string,
        message: string,
        date: string
    ) {
        this.firstName = firstName;
        this.lastName = lastName;
        this.companyName = companyName;
        this.address = address;
        this.email = email;
        this.phone = phone;
        this.message = message;
        this.date = date;
    }
}

// Event listener for form submission
document.getElementById('sheetdb-form')?.addEventListener('submit', function(e) {
    e.preventDefault(); // Prevent the default form submission

    // Gather form data and cast elements to the correct type
    const form = document.getElementById('sheetdb-form') as HTMLFormElement;
    const firstName = (document.getElementById('firstName') as HTMLInputElement)?.value ?? '';
    const lastName = (document.getElementById('lastName') as HTMLInputElement)?.value ?? '';
    const companyName = (document.getElementById('companyName') as HTMLInputElement)?.value ?? '';
    const address = (document.getElementById('address') as HTMLInputElement)?.value ?? '';
    const email = (document.getElementById('email') as HTMLInputElement)?.value ?? '';
    const phone = (document.getElementById('phone') as HTMLInputElement)?.value ?? '';
    const message = (document.getElementById('message') as HTMLTextAreaElement)?.value ?? '';
    const date = new Date().toLocaleString();

    // Create a new instance of FormSubmission
    const formSubmission = new FormSubmission(
        firstName,
        lastName,
        companyName,
        address,
        email,
        phone,
        message,
        date
    );

    // Retrieve existing data from local storage
    let allData: FormSubmission[] = JSON.parse(localStorage.getItem('sheetdb-form') ?? '[]');
    // Add new data
    allData.push(formSubmission);
    // Store updated data in local storage
    localStorage.setItem('sheetdb-form', JSON.stringify(allData));

    // Submit data to API
    fetch(form.action, {
        method: 'POST',
        body: new FormData(form),
    })
    .then(response => response.json())
    .then(data => {
        if (data.error) {
            console.error('Error:', data.error);
        } else {
            console.log('Success:', data);
            window.open('page2.html', '_blank'); // Redirect or open a new page
            form.reset(); // Reset form after successful submission
        }
    })
    .catch((error) => {
        console.error('Error:', error);
    });
});
</script>



<style>
.community-message {
  display: flex;
  flex-direction: column;
  align-items: center; /* Center the content horizontally */
  width: 100%; /* Ensure the container uses full width */
  box-sizing: border-box; /* Include padding and border in width calculation */
}
.community-image {
  height: 209px;
  width: 100%;
}
.component-title {
  display: flex;
  justify-content: center;
  width: 100%;
  box-sizing: border-box;
}
.component-marketing-form-header {
  display: flex;
  flex-direction: column; /* Stack image and text */
  width: 100%;
  gap: 5px; /* Space between the columns */
}
.left-column {
  padding-top: 5px;
  width: 100%;
  height: 100%;
}
.right-column {
  width: 100%;
}
.right-column-images {
  display: flex;
  flex-direction: row;
  justify-content: center;
  gap: 5px;
}
.left-column img {
  max-width: 100%; /* Ensure image scales within its container */
  height: auto; /* Maintain aspect ratio */
}

/* FORM STYLING */
.component-form {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-bottom: 10px;
  width: 100%;
}
form {
  background-color: #1c4880;
  padding: 2rem;
  border-radius: 8px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  width: 100%;
  border: none;
}
.form-control {
  background-color: #ffffff;
  color: #333;
  border: 1px solid #ced4da;
  border-radius: 4px;
  padding: 0.75rem 1rem;
  width: 100%; /* Full width for form fields */
}
.form-control::placeholder {
  color: #6c757d;
}
textarea.form-control {
  background-color: #ffffff;
  color: #333;
  border: 1px solid #ced4da;
  border-radius: 4px;
  padding: 0.75rem 1rem;
  width: 100%; /* Full width for textarea */
}
.btn-primary {
  background-color: #003366;
  border: none;
  color: #fff;
  padding: 0.75rem 1.5rem;
  font-size: 1rem;
  border-radius: 4px;
}
.btn-primary:hover {
  background-color: #002244;
}
.btn-primary:focus,
.btn-primary:active {
  outline: none;
  box-shadow: none;
}
@media (min-width: 768px) {
.component-marketing-form-header {
  flex-direction: row; /* Switch to row layout on larger screens */
}
.left-column, .right-column {
  width: 50%; /* Each column takes up 50% of the width */
}
}
</style>
