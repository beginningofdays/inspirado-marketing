<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Utility function to handle page navigation
    function handlePageNavigation(buttonId, pageId, currentPage) {
      const button = document.getElementById(buttonId);
      const page = document.getElementById(pageId);
      
      if (button && page) {
        button.addEventListener('click', () => {
          if (currentPage === 1) {
            page.classList.add('d-none');
          } else {
            page.classList.remove('d-none');
            currentPage = 1;
          }
        });
      }
    }
  
    // Initialize page navigation for all modals
    handlePageNavigation('communityMarketingNextPage', 'communityMarketingPage1', 1);
    handlePageNavigation('communityBuildingNextPage', 'communityBuildingPage1', 1);
    handlePageNavigation('socialMediaNextPage', 'socialMediaPage1', 1);
  
    // Handle form submission
    document.getElementById('dataForm')?.addEventListener('submit', (e) => {
      e.preventDefault(); // Prevent default form submission
  
      // Gather form data
      const data = {
        firstname: (document.getElementById('firstname') as HTMLInputElement)?.value.trim() ?? '',
        lastname: (document.getElementById('lastname') as HTMLInputElement)?.value.trim() ?? '',
        companyName: (document.getElementById('company-name') as HTMLInputElement)?.value.trim() ?? '',
        address: (document.getElementById('address') as HTMLInputElement)?.value.trim() ?? '',
        email: (document.getElementById('email') as HTMLInputElement)?.value.trim() ?? '',
        phone: (document.getElementById('phone') as HTMLInputElement)?.value.trim() ?? '',
        message: (document.getElementById('message') as HTMLTextAreaElement)?.value.trim() ?? '',
        date: new Date().toISOString()
      };
  
      // Retrieve existing data from local storage
      let allData: any[] = JSON.parse(localStorage.getItem('formData') ?? '[]');
      
      // Add new data
      allData.push(data);
      
      // Store updated data in local storage
      localStorage.setItem('formData', JSON.stringify(allData));
      
      // Reset the form
      (document.getElementById('dataForm') as HTMLFormElement)?.reset();
      
      // Notify the user
      alert('Information Submitted!');
    });
  });
  </script>
  

<style>
.community-message {
  display: flex;
  flex-direction: column;
  align-items: center; /* Center the content horizontally */
  width: 100%; /* Ensure the container uses full width */
  box-sizing: border-box; /* Include padding and border in width calculation */
}
.community-image {
  height: 209px;
  width: 100%;
}
.component-title {
  display: flex;
  justify-content: center;
  width: 100%;
  box-sizing: border-box;
}
.component-marketing-form-header {
  display: flex;
  flex-direction: column; /* Stack image and text */
  width: 100%;
  gap: 5px; /* Space between the columns */
}
.left-column {
  padding-top: 5px;
  width: 100%;
  height: 100%;
}
.right-column {
  width: 100%;
}
.right-column-images {
  display: flex;
  flex-direction: row;
  justify-content: center;
  gap: 5px;
}
.left-column img {
  max-width: 100%; /* Ensure image scales within its container */
  height: auto; /* Maintain aspect ratio */
}

/* FORM STYLING */
.component-form {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-bottom: 10px;
  width: 100%;
}
form {
  background-color: #1c4880;
  padding: 2rem;
  border-radius: 8px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  width: 100%;
  border: none;
}
.form-control {
  background-color: #ffffff;
  color: #333;
  border: 1px solid #ced4da;
  border-radius: 4px;
  padding: 0.75rem 1rem;
  width: 100%; /* Full width for form fields */
}
.form-control::placeholder {
  color: #6c757d;
}
textarea.form-control {
  background-color: #ffffff;
  color: #333;
  border: 1px solid #ced4da;
  border-radius: 4px;
  padding: 0.75rem 1rem;
  width: 100%; /* Full width for textarea */
}
.btn-primary {
  background-color: #003366;
  border: none;
  color: #fff;
  padding: 0.75rem 1.5rem;
  font-size: 1rem;
  border-radius: 4px;
}
.btn-primary:hover {
  background-color: #002244;
}
.btn-primary:focus,
.btn-primary:active {
  outline: none;
  box-shadow: none;
}
@media (min-width: 768px) {
.component-marketing-form-header {
  flex-direction: row; /* Switch to row layout on larger screens */
}
.left-column, .right-column {
  width: 50%; /* Each column takes up 50% of the width */
}
}
</style>
