---

---
<div class="flex-column mb-3">
    <div class="component-admin-text">
        <p>Welcome to the Administration Page of my Inspirado Marketing</p>
        <p>Please use your administration credentials to access the marketing data</p> 
    </div>

    <div class="component-admin-form">
        <h1>Filter Data</h1>        
<!-- Filter Inputs in two rows and buttons in one row -->
    <div class="filter-container">
        <div class="filter-row">
            <label for="filterFirstname">First Name:</label>
            <input type="text" id="filterFirstname">
                
            <label for="filterLastname">Last Name:</label>
            <input type="text" id="filterLastname">
        </div>
            
        <div class="filter-row">
            <label for="filterCountry">Country:</label>
            <input type="text" id="filterCountry">
                
            <label for="filterEmail">Email:</label>
            <input type="text" id="filterEmail">
                
            <label for="filterDate">Date:</label>
            <input type="date" id="filterDate">
        </div>

        <div class="button-row">
            <button id="filterButton">Apply Filter</button>
            <button id="clearButton">Clear Filters</button>
        </div>
    </div>

    <h2>Data:</h2>
        
    <!-- Table for displaying data -->
    <table id="dataTable">
        <thead>
            <tr>
                <th>First Name</th>
                <th>Last Name</th>
                <th>Country</th>
                <th>Email</th>
                <th>Text</th>
                <th>Date</th>
            </tr>
        </thead>
        <tbody id="dataDisplay">
                <!-- Rows will be inserted here dynamically -->
        </tbody>
    </table>
    </div> 
</div>


<script>
    // Define the shape of each entry in the data
    interface DataEntry {
      firstname?: string;
      lastname?: string;
      country?: string;
      email?: string;
      text?: string;
      date?: string;
    }
  
    // Display data in the table
    function displayData(data: DataEntry[]) {
      const dataDisplay = document.getElementById('dataDisplay');
      if (dataDisplay) {
        dataDisplay.innerHTML = ''; // Clear previous content
  
        data.forEach(entry => {
          const row = document.createElement('tr');
          row.innerHTML = `
            <td>${entry.firstname || 'N/A'}</td>
            <td>${entry.lastname || 'N/A'}</td>
            <td>${entry.country || 'N/A'}</td>
            <td>${entry.email || 'N/A'}</td>
            <td>${entry.text || 'N/A'}</td>
            <td>${entry.date || 'N/A'}</td>
          `;
          dataDisplay.appendChild(row);
        });
      }
    }
  
    // Filters based on user input
    function applyFilter() {
      const filterFirstname = (document.getElementById('filterFirstname') as HTMLInputElement)?.value.toLowerCase() || '';
      const filterLastname = (document.getElementById('filterLastname') as HTMLInputElement)?.value.toLowerCase() || '';
      const filterCountry = (document.getElementById('filterCountry') as HTMLInputElement)?.value.toLowerCase() || '';
      const filterEmail = (document.getElementById('filterEmail') as HTMLInputElement)?.value.toLowerCase() || '';
      const filterDate = (document.getElementById('filterDate') as HTMLInputElement)?.value || '';
  
      const storedData = localStorage.getItem('formData');
      let allData: DataEntry[] = storedData ? JSON.parse(storedData) : [];
  
      if (filterFirstname) {
        allData = allData.filter((entry: DataEntry) => 
          (entry.firstname || '').toLowerCase().includes(filterFirstname)
        );
      }
      if (filterLastname) {
        allData = allData.filter((entry: DataEntry) => 
          (entry.lastname || '').toLowerCase().includes(filterLastname)
        );
      }
      if (filterCountry) {
        allData = allData.filter((entry: DataEntry) => 
          (entry.country || '').toLowerCase().includes(filterCountry)
        );
      }
      if (filterEmail) {
        allData = allData.filter((entry: DataEntry) => 
          (entry.email || '').toLowerCase().includes(filterEmail)
        );
      }
      if (filterDate) {
        allData = allData.filter((entry: DataEntry) => 
          entry.date?.startsWith(filterDate)
        );
      }
  
      displayData(allData);
    }
  
    // Function to clear all filters
    function clearFilters() {
      const filterFirstname = document.getElementById('filterFirstname') as HTMLInputElement | null;
      const filterLastname = document.getElementById('filterLastname') as HTMLInputElement | null;
      const filterCountry = document.getElementById('filterCountry') as HTMLInputElement | null;
      const filterEmail = document.getElementById('filterEmail') as HTMLInputElement | null;
      const filterDate = document.getElementById('filterDate') as HTMLInputElement | null;
  
      if (filterFirstname) filterFirstname.value = '';
      if (filterLastname) filterLastname.value = '';
      if (filterCountry) filterCountry.value = '';
      if (filterEmail) filterEmail.value = '';
      if (filterDate) filterDate.value = '';
  
      const storedData = localStorage.getItem('formData');
      displayData(storedData ? JSON.parse(storedData) : []);
    }
  
    // Set up event listeners for filter buttons
    document.addEventListener('DOMContentLoaded', function() {
      const filterButton = document.getElementById('filterButton');
      const clearButton = document.getElementById('clearButton');
  
      if (filterButton) filterButton.addEventListener('click', applyFilter);
      if (clearButton) clearButton.addEventListener('click', clearFilters);
  
      // Initial display of data
      const storedData = localStorage.getItem('formData');
      displayData(storedData ? JSON.parse(storedData) : []);
    });
  </script>
  